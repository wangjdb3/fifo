// megafunction wizard: %FIFO%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: dcfifo 

// ============================================================
// File Name: fifo_ip.v
// Megafunction Name(s):
// 			dcfifo
//
// Simulation Library Files(s):
// 			altera_mf
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 15.0.0 Build 145 04/22/2015 SJ Full Version
// ************************************************************


//Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, the Altera Quartus II License Agreement,
//the Altera MegaCore Function License Agreement, or other 
//applicable license agreement, including, without limitation, 
//that your use is for the sole purpose of programming logic 
//devices manufactured by Altera and sold by Altera or its 
//authorized distributors.  Please refer to the applicable 
//agreement for further details.


//dcfifo_mixed_widths DEVICE_FAMILY="Cyclone IV E" LPM_NUMWORDS=16 LPM_SHOWAHEAD="OFF" LPM_WIDTH=24 LPM_WIDTH_R=24 LPM_WIDTHU=4 LPM_WIDTHU_R=4 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=4 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRSYNC_DELAYPIPE=4 data q rdclk rdempty rdreq wrclk wrfull wrreq INTENDED_DEVICE_FAMILY="Cyclone IV E" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 15.0 cbx_a_gray2bin 2015:04:22:18:04:07:SJ cbx_a_graycounter 2015:04:22:18:04:07:SJ cbx_altdpram 2015:04:22:18:04:07:SJ cbx_altsyncram 2015:04:22:18:04:07:SJ cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_dcfifo 2015:04:22:18:04:07:SJ cbx_fifo_common 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_counter 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_lpm_mux 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_scfifo 2015:04:22:18:04:08:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ cbx_stratixiii 2015:04:22:18:04:08:SJ cbx_stratixv 2015:04:22:18:04:08:SJ cbx_util_mgl 2015:04:22:18:04:08:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//a_graycounter DEVICE_FAMILY="Cyclone IV E" PVALUE=1 WIDTH=5 clock cnt_en q
//VERSION_BEGIN 15.0 cbx_a_gray2bin 2015:04:22:18:04:07:SJ cbx_a_graycounter 2015:04:22:18:04:07:SJ cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END

//synthesis_resources = reg 8 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"{-to counter5a[0]} POWER_UP_LEVEL=HIGH"} *)
module  fifo_ip_a_graycounter
	( 
	clock,
	cnt_en,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   cnt_en;
	output   [4:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   cnt_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[4:0]	counter5a;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=HIGH"} *)
	reg	parity6;
	reg	[1:0]	sub_parity7a;
	wire  [4:0]  cntr_cout;
	wire  parity_cout;
	wire sclr;
	wire updown;

	// synopsys translate_off
	initial
		counter5a[0:0] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[0:0] <= 1'b0;
			else  counter5a[0:0] <= ((cnt_en & (counter5a[0:0] ^ (~ parity_cout))) | ((~ cnt_en) & counter5a[0:0]));
	// synopsys translate_off
	initial
		counter5a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[1:1] <= 1'b0;
			else  counter5a[1:1] <= (counter5a[1:1] ^ (counter5a[0:0] & cntr_cout[0]));
	// synopsys translate_off
	initial
		counter5a[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[2:2] <= 1'b0;
			else  counter5a[2:2] <= (counter5a[2:2] ^ (counter5a[1:1] & cntr_cout[1]));
	// synopsys translate_off
	initial
		counter5a[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[3:3] <= 1'b0;
			else  counter5a[3:3] <= (counter5a[3:3] ^ (counter5a[2:2] & cntr_cout[2]));
	// synopsys translate_off
	initial
		counter5a[4:4] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter5a[4:4] <= 1'b0;
			else  counter5a[4:4] <= (counter5a[4:4] ^ cntr_cout[3]);
	// synopsys translate_off
	initial
		parity6 = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) parity6 <= 1'b0;
			else  parity6 <= ((cnt_en & (sub_parity7a[0] ^ sub_parity7a[1])) | ((~ cnt_en) & parity6));
	// synopsys translate_off
	initial
		sub_parity7a[0:0] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity7a[0:0] <= 1'b0;
			else  sub_parity7a[0:0] <= ((cnt_en & (((counter5a[0] ^ counter5a[1]) ^ counter5a[2]) ^ counter5a[3])) | ((~ cnt_en) & sub_parity7a[0:0]));
	// synopsys translate_off
	initial
		sub_parity7a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity7a[1:1] <= 1'b0;
			else  sub_parity7a[1:1] <= ((cnt_en & counter5a[4]) | ((~ cnt_en) & sub_parity7a[1:1]));
	assign
		cntr_cout = {1'b0, (cntr_cout[2] & (~ counter5a[2:2])), (cntr_cout[1] & (~ counter5a[1:1])), (cntr_cout[0] & (~ counter5a[0:0])), (cnt_en & parity_cout)},
		parity_cout = (((~ parity6) ^ updown) & cnt_en),
		q = counter5a,
		sclr = 1'b0,
		updown = 1'b1;
endmodule //fifo_ip_a_graycounter


//a_graycounter DEVICE_FAMILY="Cyclone IV E" PVALUE=1 WIDTH=5 clock cnt_en q ALTERA_INTERNAL_OPTIONS=suppress_da_rule_internal=S102
//VERSION_BEGIN 15.0 cbx_a_gray2bin 2015:04:22:18:04:07:SJ cbx_a_graycounter 2015:04:22:18:04:07:SJ cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END

//synthesis_resources = reg 8 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"suppress_da_rule_internal=S102;{-to counter8a[0]} POWER_UP_LEVEL=HIGH"} *)
module  fifo_ip_a_graycounter1
	( 
	clock,
	cnt_en,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   cnt_en;
	output   [4:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   cnt_en;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[4:0]	counter8a;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=HIGH"} *)
	reg	parity9;
	reg	[1:0]	sub_parity10a;
	wire  [4:0]  cntr_cout;
	wire  parity_cout;
	wire sclr;
	wire updown;

	// synopsys translate_off
	initial
		counter8a[0:0] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[0:0] <= 1'b0;
			else  counter8a[0:0] <= ((cnt_en & (counter8a[0:0] ^ (~ parity_cout))) | ((~ cnt_en) & counter8a[0:0]));
	// synopsys translate_off
	initial
		counter8a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[1:1] <= 1'b0;
			else  counter8a[1:1] <= (counter8a[1:1] ^ (counter8a[0:0] & cntr_cout[0]));
	// synopsys translate_off
	initial
		counter8a[2:2] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[2:2] <= 1'b0;
			else  counter8a[2:2] <= (counter8a[2:2] ^ (counter8a[1:1] & cntr_cout[1]));
	// synopsys translate_off
	initial
		counter8a[3:3] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[3:3] <= 1'b0;
			else  counter8a[3:3] <= (counter8a[3:3] ^ (counter8a[2:2] & cntr_cout[2]));
	// synopsys translate_off
	initial
		counter8a[4:4] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) counter8a[4:4] <= 1'b0;
			else  counter8a[4:4] <= (counter8a[4:4] ^ cntr_cout[3]);
	// synopsys translate_off
	initial
		parity9 = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) parity9 <= 1'b0;
			else  parity9 <= ((cnt_en & (sub_parity10a[0] ^ sub_parity10a[1])) | ((~ cnt_en) & parity9));
	// synopsys translate_off
	initial
		sub_parity10a[0:0] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity10a[0:0] <= 1'b0;
			else  sub_parity10a[0:0] <= ((cnt_en & (((counter8a[0] ^ counter8a[1]) ^ counter8a[2]) ^ counter8a[3])) | ((~ cnt_en) & sub_parity10a[0:0]));
	// synopsys translate_off
	initial
		sub_parity10a[1:1] = 0;
	// synopsys translate_on
	always @ ( posedge clock)
		
			if (sclr == 1'b1) sub_parity10a[1:1] <= 1'b0;
			else  sub_parity10a[1:1] <= ((cnt_en & counter8a[4]) | ((~ cnt_en) & sub_parity10a[1:1]));
	assign
		cntr_cout = {1'b0, (cntr_cout[2] & (~ counter8a[2:2])), (cntr_cout[1] & (~ counter8a[1:1])), (cntr_cout[0] & (~ counter8a[0:0])), (cnt_en & parity_cout)},
		parity_cout = (((~ parity9) ^ updown) & cnt_en),
		q = counter8a,
		sclr = 1'b0,
		updown = 1'b1;
endmodule //fifo_ip_a_graycounter1


//altsyncram ADDRESS_REG_B="CLOCK1" CLOCK_ENABLE_INPUT_B="BYPASS" DEVICE_FAMILY="Cyclone IV E" OPERATION_MODE="DUAL_PORT" OUTDATA_ACLR_B="CLEAR1" OUTDATA_REG_B="CLOCK1" WIDTH_A=24 WIDTH_B=24 WIDTH_BYTEENA_A=1 WIDTHAD_A=4 WIDTHAD_B=4 address_a address_b addressstall_b clock0 clock1 clocken1 data_a q_b wren_a
//VERSION_BEGIN 15.0 cbx_altsyncram 2015:04:22:18:04:07:SJ cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_lpm_mux 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ cbx_stratixiii 2015:04:22:18:04:08:SJ cbx_stratixv 2015:04:22:18:04:08:SJ cbx_util_mgl 2015:04:22:18:04:08:SJ  VERSION_END

//synthesis_resources = M9K 1 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"OPTIMIZE_POWER_DURING_SYNTHESIS=NORMAL_COMPILATION"} *)
module  fifo_ip_altsyncram
	( 
	address_a,
	address_b,
	addressstall_b,
	clock0,
	clock1,
	clocken1,
	data_a,
	q_b,
	wren_a) /* synthesis synthesis_clearbox=1 */;
	input   [3:0]  address_a;
	input   [3:0]  address_b;
	input   addressstall_b;
	input   clock0;
	input   clock1;
	input   clocken1;
	input   [23:0]  data_a;
	output   [23:0]  q_b;
	input   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri1   [3:0]  address_b;
	tri0   addressstall_b;
	tri1   clock0;
	tri1   clock1;
	tri1   clocken1;
	tri1   [23:0]  data_a;
	tri0   wren_a;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]   wire_ram_block11a_0portbdataout;
	wire  [0:0]   wire_ram_block11a_1portbdataout;
	wire  [0:0]   wire_ram_block11a_2portbdataout;
	wire  [0:0]   wire_ram_block11a_3portbdataout;
	wire  [0:0]   wire_ram_block11a_4portbdataout;
	wire  [0:0]   wire_ram_block11a_5portbdataout;
	wire  [0:0]   wire_ram_block11a_6portbdataout;
	wire  [0:0]   wire_ram_block11a_7portbdataout;
	wire  [0:0]   wire_ram_block11a_8portbdataout;
	wire  [0:0]   wire_ram_block11a_9portbdataout;
	wire  [0:0]   wire_ram_block11a_10portbdataout;
	wire  [0:0]   wire_ram_block11a_11portbdataout;
	wire  [0:0]   wire_ram_block11a_12portbdataout;
	wire  [0:0]   wire_ram_block11a_13portbdataout;
	wire  [0:0]   wire_ram_block11a_14portbdataout;
	wire  [0:0]   wire_ram_block11a_15portbdataout;
	wire  [0:0]   wire_ram_block11a_16portbdataout;
	wire  [0:0]   wire_ram_block11a_17portbdataout;
	wire  [0:0]   wire_ram_block11a_18portbdataout;
	wire  [0:0]   wire_ram_block11a_19portbdataout;
	wire  [0:0]   wire_ram_block11a_20portbdataout;
	wire  [0:0]   wire_ram_block11a_21portbdataout;
	wire  [0:0]   wire_ram_block11a_22portbdataout;
	wire  [0:0]   wire_ram_block11a_23portbdataout;
	wire  [3:0]  address_a_wire;
	wire  [3:0]  address_b_wire;

	cycloneive_ram_block   ram_block11a_0
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[0]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_0portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_0.clk0_core_clock_enable = "none",
		ram_block11a_0.clk0_input_clock_enable = "none",
		ram_block11a_0.clk1_core_clock_enable = "none",
		ram_block11a_0.clk1_input_clock_enable = "none",
		ram_block11a_0.clk1_output_clock_enable = "ena1",
		ram_block11a_0.connectivity_checking = "OFF",
		ram_block11a_0.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_0.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_0.operation_mode = "dual_port",
		ram_block11a_0.port_a_address_width = 4,
		ram_block11a_0.port_a_data_width = 1,
		ram_block11a_0.port_a_first_address = 0,
		ram_block11a_0.port_a_first_bit_number = 0,
		ram_block11a_0.port_a_last_address = 15,
		ram_block11a_0.port_a_logical_ram_depth = 16,
		ram_block11a_0.port_a_logical_ram_width = 24,
		ram_block11a_0.port_b_address_clear = "none",
		ram_block11a_0.port_b_address_clock = "clock1",
		ram_block11a_0.port_b_address_width = 4,
		ram_block11a_0.port_b_data_out_clear = "none",
		ram_block11a_0.port_b_data_out_clock = "clock1",
		ram_block11a_0.port_b_data_width = 1,
		ram_block11a_0.port_b_first_address = 0,
		ram_block11a_0.port_b_first_bit_number = 0,
		ram_block11a_0.port_b_last_address = 15,
		ram_block11a_0.port_b_logical_ram_depth = 16,
		ram_block11a_0.port_b_logical_ram_width = 24,
		ram_block11a_0.port_b_read_enable_clock = "clock1",
		ram_block11a_0.ram_block_type = "AUTO",
		ram_block11a_0.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_1
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[1]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_1portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_1.clk0_core_clock_enable = "none",
		ram_block11a_1.clk0_input_clock_enable = "none",
		ram_block11a_1.clk1_core_clock_enable = "none",
		ram_block11a_1.clk1_input_clock_enable = "none",
		ram_block11a_1.clk1_output_clock_enable = "ena1",
		ram_block11a_1.connectivity_checking = "OFF",
		ram_block11a_1.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_1.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_1.operation_mode = "dual_port",
		ram_block11a_1.port_a_address_width = 4,
		ram_block11a_1.port_a_data_width = 1,
		ram_block11a_1.port_a_first_address = 0,
		ram_block11a_1.port_a_first_bit_number = 1,
		ram_block11a_1.port_a_last_address = 15,
		ram_block11a_1.port_a_logical_ram_depth = 16,
		ram_block11a_1.port_a_logical_ram_width = 24,
		ram_block11a_1.port_b_address_clear = "none",
		ram_block11a_1.port_b_address_clock = "clock1",
		ram_block11a_1.port_b_address_width = 4,
		ram_block11a_1.port_b_data_out_clear = "none",
		ram_block11a_1.port_b_data_out_clock = "clock1",
		ram_block11a_1.port_b_data_width = 1,
		ram_block11a_1.port_b_first_address = 0,
		ram_block11a_1.port_b_first_bit_number = 1,
		ram_block11a_1.port_b_last_address = 15,
		ram_block11a_1.port_b_logical_ram_depth = 16,
		ram_block11a_1.port_b_logical_ram_width = 24,
		ram_block11a_1.port_b_read_enable_clock = "clock1",
		ram_block11a_1.ram_block_type = "AUTO",
		ram_block11a_1.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_2
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[2]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_2portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_2.clk0_core_clock_enable = "none",
		ram_block11a_2.clk0_input_clock_enable = "none",
		ram_block11a_2.clk1_core_clock_enable = "none",
		ram_block11a_2.clk1_input_clock_enable = "none",
		ram_block11a_2.clk1_output_clock_enable = "ena1",
		ram_block11a_2.connectivity_checking = "OFF",
		ram_block11a_2.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_2.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_2.operation_mode = "dual_port",
		ram_block11a_2.port_a_address_width = 4,
		ram_block11a_2.port_a_data_width = 1,
		ram_block11a_2.port_a_first_address = 0,
		ram_block11a_2.port_a_first_bit_number = 2,
		ram_block11a_2.port_a_last_address = 15,
		ram_block11a_2.port_a_logical_ram_depth = 16,
		ram_block11a_2.port_a_logical_ram_width = 24,
		ram_block11a_2.port_b_address_clear = "none",
		ram_block11a_2.port_b_address_clock = "clock1",
		ram_block11a_2.port_b_address_width = 4,
		ram_block11a_2.port_b_data_out_clear = "none",
		ram_block11a_2.port_b_data_out_clock = "clock1",
		ram_block11a_2.port_b_data_width = 1,
		ram_block11a_2.port_b_first_address = 0,
		ram_block11a_2.port_b_first_bit_number = 2,
		ram_block11a_2.port_b_last_address = 15,
		ram_block11a_2.port_b_logical_ram_depth = 16,
		ram_block11a_2.port_b_logical_ram_width = 24,
		ram_block11a_2.port_b_read_enable_clock = "clock1",
		ram_block11a_2.ram_block_type = "AUTO",
		ram_block11a_2.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_3
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[3]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_3portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_3.clk0_core_clock_enable = "none",
		ram_block11a_3.clk0_input_clock_enable = "none",
		ram_block11a_3.clk1_core_clock_enable = "none",
		ram_block11a_3.clk1_input_clock_enable = "none",
		ram_block11a_3.clk1_output_clock_enable = "ena1",
		ram_block11a_3.connectivity_checking = "OFF",
		ram_block11a_3.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_3.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_3.operation_mode = "dual_port",
		ram_block11a_3.port_a_address_width = 4,
		ram_block11a_3.port_a_data_width = 1,
		ram_block11a_3.port_a_first_address = 0,
		ram_block11a_3.port_a_first_bit_number = 3,
		ram_block11a_3.port_a_last_address = 15,
		ram_block11a_3.port_a_logical_ram_depth = 16,
		ram_block11a_3.port_a_logical_ram_width = 24,
		ram_block11a_3.port_b_address_clear = "none",
		ram_block11a_3.port_b_address_clock = "clock1",
		ram_block11a_3.port_b_address_width = 4,
		ram_block11a_3.port_b_data_out_clear = "none",
		ram_block11a_3.port_b_data_out_clock = "clock1",
		ram_block11a_3.port_b_data_width = 1,
		ram_block11a_3.port_b_first_address = 0,
		ram_block11a_3.port_b_first_bit_number = 3,
		ram_block11a_3.port_b_last_address = 15,
		ram_block11a_3.port_b_logical_ram_depth = 16,
		ram_block11a_3.port_b_logical_ram_width = 24,
		ram_block11a_3.port_b_read_enable_clock = "clock1",
		ram_block11a_3.ram_block_type = "AUTO",
		ram_block11a_3.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_4
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[4]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_4portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_4.clk0_core_clock_enable = "none",
		ram_block11a_4.clk0_input_clock_enable = "none",
		ram_block11a_4.clk1_core_clock_enable = "none",
		ram_block11a_4.clk1_input_clock_enable = "none",
		ram_block11a_4.clk1_output_clock_enable = "ena1",
		ram_block11a_4.connectivity_checking = "OFF",
		ram_block11a_4.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_4.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_4.operation_mode = "dual_port",
		ram_block11a_4.port_a_address_width = 4,
		ram_block11a_4.port_a_data_width = 1,
		ram_block11a_4.port_a_first_address = 0,
		ram_block11a_4.port_a_first_bit_number = 4,
		ram_block11a_4.port_a_last_address = 15,
		ram_block11a_4.port_a_logical_ram_depth = 16,
		ram_block11a_4.port_a_logical_ram_width = 24,
		ram_block11a_4.port_b_address_clear = "none",
		ram_block11a_4.port_b_address_clock = "clock1",
		ram_block11a_4.port_b_address_width = 4,
		ram_block11a_4.port_b_data_out_clear = "none",
		ram_block11a_4.port_b_data_out_clock = "clock1",
		ram_block11a_4.port_b_data_width = 1,
		ram_block11a_4.port_b_first_address = 0,
		ram_block11a_4.port_b_first_bit_number = 4,
		ram_block11a_4.port_b_last_address = 15,
		ram_block11a_4.port_b_logical_ram_depth = 16,
		ram_block11a_4.port_b_logical_ram_width = 24,
		ram_block11a_4.port_b_read_enable_clock = "clock1",
		ram_block11a_4.ram_block_type = "AUTO",
		ram_block11a_4.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_5
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[5]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_5portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_5.clk0_core_clock_enable = "none",
		ram_block11a_5.clk0_input_clock_enable = "none",
		ram_block11a_5.clk1_core_clock_enable = "none",
		ram_block11a_5.clk1_input_clock_enable = "none",
		ram_block11a_5.clk1_output_clock_enable = "ena1",
		ram_block11a_5.connectivity_checking = "OFF",
		ram_block11a_5.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_5.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_5.operation_mode = "dual_port",
		ram_block11a_5.port_a_address_width = 4,
		ram_block11a_5.port_a_data_width = 1,
		ram_block11a_5.port_a_first_address = 0,
		ram_block11a_5.port_a_first_bit_number = 5,
		ram_block11a_5.port_a_last_address = 15,
		ram_block11a_5.port_a_logical_ram_depth = 16,
		ram_block11a_5.port_a_logical_ram_width = 24,
		ram_block11a_5.port_b_address_clear = "none",
		ram_block11a_5.port_b_address_clock = "clock1",
		ram_block11a_5.port_b_address_width = 4,
		ram_block11a_5.port_b_data_out_clear = "none",
		ram_block11a_5.port_b_data_out_clock = "clock1",
		ram_block11a_5.port_b_data_width = 1,
		ram_block11a_5.port_b_first_address = 0,
		ram_block11a_5.port_b_first_bit_number = 5,
		ram_block11a_5.port_b_last_address = 15,
		ram_block11a_5.port_b_logical_ram_depth = 16,
		ram_block11a_5.port_b_logical_ram_width = 24,
		ram_block11a_5.port_b_read_enable_clock = "clock1",
		ram_block11a_5.ram_block_type = "AUTO",
		ram_block11a_5.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_6
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[6]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_6portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_6.clk0_core_clock_enable = "none",
		ram_block11a_6.clk0_input_clock_enable = "none",
		ram_block11a_6.clk1_core_clock_enable = "none",
		ram_block11a_6.clk1_input_clock_enable = "none",
		ram_block11a_6.clk1_output_clock_enable = "ena1",
		ram_block11a_6.connectivity_checking = "OFF",
		ram_block11a_6.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_6.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_6.operation_mode = "dual_port",
		ram_block11a_6.port_a_address_width = 4,
		ram_block11a_6.port_a_data_width = 1,
		ram_block11a_6.port_a_first_address = 0,
		ram_block11a_6.port_a_first_bit_number = 6,
		ram_block11a_6.port_a_last_address = 15,
		ram_block11a_6.port_a_logical_ram_depth = 16,
		ram_block11a_6.port_a_logical_ram_width = 24,
		ram_block11a_6.port_b_address_clear = "none",
		ram_block11a_6.port_b_address_clock = "clock1",
		ram_block11a_6.port_b_address_width = 4,
		ram_block11a_6.port_b_data_out_clear = "none",
		ram_block11a_6.port_b_data_out_clock = "clock1",
		ram_block11a_6.port_b_data_width = 1,
		ram_block11a_6.port_b_first_address = 0,
		ram_block11a_6.port_b_first_bit_number = 6,
		ram_block11a_6.port_b_last_address = 15,
		ram_block11a_6.port_b_logical_ram_depth = 16,
		ram_block11a_6.port_b_logical_ram_width = 24,
		ram_block11a_6.port_b_read_enable_clock = "clock1",
		ram_block11a_6.ram_block_type = "AUTO",
		ram_block11a_6.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_7
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[7]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_7portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_7.clk0_core_clock_enable = "none",
		ram_block11a_7.clk0_input_clock_enable = "none",
		ram_block11a_7.clk1_core_clock_enable = "none",
		ram_block11a_7.clk1_input_clock_enable = "none",
		ram_block11a_7.clk1_output_clock_enable = "ena1",
		ram_block11a_7.connectivity_checking = "OFF",
		ram_block11a_7.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_7.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_7.operation_mode = "dual_port",
		ram_block11a_7.port_a_address_width = 4,
		ram_block11a_7.port_a_data_width = 1,
		ram_block11a_7.port_a_first_address = 0,
		ram_block11a_7.port_a_first_bit_number = 7,
		ram_block11a_7.port_a_last_address = 15,
		ram_block11a_7.port_a_logical_ram_depth = 16,
		ram_block11a_7.port_a_logical_ram_width = 24,
		ram_block11a_7.port_b_address_clear = "none",
		ram_block11a_7.port_b_address_clock = "clock1",
		ram_block11a_7.port_b_address_width = 4,
		ram_block11a_7.port_b_data_out_clear = "none",
		ram_block11a_7.port_b_data_out_clock = "clock1",
		ram_block11a_7.port_b_data_width = 1,
		ram_block11a_7.port_b_first_address = 0,
		ram_block11a_7.port_b_first_bit_number = 7,
		ram_block11a_7.port_b_last_address = 15,
		ram_block11a_7.port_b_logical_ram_depth = 16,
		ram_block11a_7.port_b_logical_ram_width = 24,
		ram_block11a_7.port_b_read_enable_clock = "clock1",
		ram_block11a_7.ram_block_type = "AUTO",
		ram_block11a_7.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_8
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[8]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_8portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_8.clk0_core_clock_enable = "none",
		ram_block11a_8.clk0_input_clock_enable = "none",
		ram_block11a_8.clk1_core_clock_enable = "none",
		ram_block11a_8.clk1_input_clock_enable = "none",
		ram_block11a_8.clk1_output_clock_enable = "ena1",
		ram_block11a_8.connectivity_checking = "OFF",
		ram_block11a_8.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_8.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_8.operation_mode = "dual_port",
		ram_block11a_8.port_a_address_width = 4,
		ram_block11a_8.port_a_data_width = 1,
		ram_block11a_8.port_a_first_address = 0,
		ram_block11a_8.port_a_first_bit_number = 8,
		ram_block11a_8.port_a_last_address = 15,
		ram_block11a_8.port_a_logical_ram_depth = 16,
		ram_block11a_8.port_a_logical_ram_width = 24,
		ram_block11a_8.port_b_address_clear = "none",
		ram_block11a_8.port_b_address_clock = "clock1",
		ram_block11a_8.port_b_address_width = 4,
		ram_block11a_8.port_b_data_out_clear = "none",
		ram_block11a_8.port_b_data_out_clock = "clock1",
		ram_block11a_8.port_b_data_width = 1,
		ram_block11a_8.port_b_first_address = 0,
		ram_block11a_8.port_b_first_bit_number = 8,
		ram_block11a_8.port_b_last_address = 15,
		ram_block11a_8.port_b_logical_ram_depth = 16,
		ram_block11a_8.port_b_logical_ram_width = 24,
		ram_block11a_8.port_b_read_enable_clock = "clock1",
		ram_block11a_8.ram_block_type = "AUTO",
		ram_block11a_8.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_9
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[9]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_9portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_9.clk0_core_clock_enable = "none",
		ram_block11a_9.clk0_input_clock_enable = "none",
		ram_block11a_9.clk1_core_clock_enable = "none",
		ram_block11a_9.clk1_input_clock_enable = "none",
		ram_block11a_9.clk1_output_clock_enable = "ena1",
		ram_block11a_9.connectivity_checking = "OFF",
		ram_block11a_9.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_9.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_9.operation_mode = "dual_port",
		ram_block11a_9.port_a_address_width = 4,
		ram_block11a_9.port_a_data_width = 1,
		ram_block11a_9.port_a_first_address = 0,
		ram_block11a_9.port_a_first_bit_number = 9,
		ram_block11a_9.port_a_last_address = 15,
		ram_block11a_9.port_a_logical_ram_depth = 16,
		ram_block11a_9.port_a_logical_ram_width = 24,
		ram_block11a_9.port_b_address_clear = "none",
		ram_block11a_9.port_b_address_clock = "clock1",
		ram_block11a_9.port_b_address_width = 4,
		ram_block11a_9.port_b_data_out_clear = "none",
		ram_block11a_9.port_b_data_out_clock = "clock1",
		ram_block11a_9.port_b_data_width = 1,
		ram_block11a_9.port_b_first_address = 0,
		ram_block11a_9.port_b_first_bit_number = 9,
		ram_block11a_9.port_b_last_address = 15,
		ram_block11a_9.port_b_logical_ram_depth = 16,
		ram_block11a_9.port_b_logical_ram_width = 24,
		ram_block11a_9.port_b_read_enable_clock = "clock1",
		ram_block11a_9.ram_block_type = "AUTO",
		ram_block11a_9.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_10
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[10]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_10portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_10.clk0_core_clock_enable = "none",
		ram_block11a_10.clk0_input_clock_enable = "none",
		ram_block11a_10.clk1_core_clock_enable = "none",
		ram_block11a_10.clk1_input_clock_enable = "none",
		ram_block11a_10.clk1_output_clock_enable = "ena1",
		ram_block11a_10.connectivity_checking = "OFF",
		ram_block11a_10.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_10.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_10.operation_mode = "dual_port",
		ram_block11a_10.port_a_address_width = 4,
		ram_block11a_10.port_a_data_width = 1,
		ram_block11a_10.port_a_first_address = 0,
		ram_block11a_10.port_a_first_bit_number = 10,
		ram_block11a_10.port_a_last_address = 15,
		ram_block11a_10.port_a_logical_ram_depth = 16,
		ram_block11a_10.port_a_logical_ram_width = 24,
		ram_block11a_10.port_b_address_clear = "none",
		ram_block11a_10.port_b_address_clock = "clock1",
		ram_block11a_10.port_b_address_width = 4,
		ram_block11a_10.port_b_data_out_clear = "none",
		ram_block11a_10.port_b_data_out_clock = "clock1",
		ram_block11a_10.port_b_data_width = 1,
		ram_block11a_10.port_b_first_address = 0,
		ram_block11a_10.port_b_first_bit_number = 10,
		ram_block11a_10.port_b_last_address = 15,
		ram_block11a_10.port_b_logical_ram_depth = 16,
		ram_block11a_10.port_b_logical_ram_width = 24,
		ram_block11a_10.port_b_read_enable_clock = "clock1",
		ram_block11a_10.ram_block_type = "AUTO",
		ram_block11a_10.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_11
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[11]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_11portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_11.clk0_core_clock_enable = "none",
		ram_block11a_11.clk0_input_clock_enable = "none",
		ram_block11a_11.clk1_core_clock_enable = "none",
		ram_block11a_11.clk1_input_clock_enable = "none",
		ram_block11a_11.clk1_output_clock_enable = "ena1",
		ram_block11a_11.connectivity_checking = "OFF",
		ram_block11a_11.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_11.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_11.operation_mode = "dual_port",
		ram_block11a_11.port_a_address_width = 4,
		ram_block11a_11.port_a_data_width = 1,
		ram_block11a_11.port_a_first_address = 0,
		ram_block11a_11.port_a_first_bit_number = 11,
		ram_block11a_11.port_a_last_address = 15,
		ram_block11a_11.port_a_logical_ram_depth = 16,
		ram_block11a_11.port_a_logical_ram_width = 24,
		ram_block11a_11.port_b_address_clear = "none",
		ram_block11a_11.port_b_address_clock = "clock1",
		ram_block11a_11.port_b_address_width = 4,
		ram_block11a_11.port_b_data_out_clear = "none",
		ram_block11a_11.port_b_data_out_clock = "clock1",
		ram_block11a_11.port_b_data_width = 1,
		ram_block11a_11.port_b_first_address = 0,
		ram_block11a_11.port_b_first_bit_number = 11,
		ram_block11a_11.port_b_last_address = 15,
		ram_block11a_11.port_b_logical_ram_depth = 16,
		ram_block11a_11.port_b_logical_ram_width = 24,
		ram_block11a_11.port_b_read_enable_clock = "clock1",
		ram_block11a_11.ram_block_type = "AUTO",
		ram_block11a_11.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_12
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[12]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_12portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_12.clk0_core_clock_enable = "none",
		ram_block11a_12.clk0_input_clock_enable = "none",
		ram_block11a_12.clk1_core_clock_enable = "none",
		ram_block11a_12.clk1_input_clock_enable = "none",
		ram_block11a_12.clk1_output_clock_enable = "ena1",
		ram_block11a_12.connectivity_checking = "OFF",
		ram_block11a_12.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_12.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_12.operation_mode = "dual_port",
		ram_block11a_12.port_a_address_width = 4,
		ram_block11a_12.port_a_data_width = 1,
		ram_block11a_12.port_a_first_address = 0,
		ram_block11a_12.port_a_first_bit_number = 12,
		ram_block11a_12.port_a_last_address = 15,
		ram_block11a_12.port_a_logical_ram_depth = 16,
		ram_block11a_12.port_a_logical_ram_width = 24,
		ram_block11a_12.port_b_address_clear = "none",
		ram_block11a_12.port_b_address_clock = "clock1",
		ram_block11a_12.port_b_address_width = 4,
		ram_block11a_12.port_b_data_out_clear = "none",
		ram_block11a_12.port_b_data_out_clock = "clock1",
		ram_block11a_12.port_b_data_width = 1,
		ram_block11a_12.port_b_first_address = 0,
		ram_block11a_12.port_b_first_bit_number = 12,
		ram_block11a_12.port_b_last_address = 15,
		ram_block11a_12.port_b_logical_ram_depth = 16,
		ram_block11a_12.port_b_logical_ram_width = 24,
		ram_block11a_12.port_b_read_enable_clock = "clock1",
		ram_block11a_12.ram_block_type = "AUTO",
		ram_block11a_12.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_13
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[13]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_13portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_13.clk0_core_clock_enable = "none",
		ram_block11a_13.clk0_input_clock_enable = "none",
		ram_block11a_13.clk1_core_clock_enable = "none",
		ram_block11a_13.clk1_input_clock_enable = "none",
		ram_block11a_13.clk1_output_clock_enable = "ena1",
		ram_block11a_13.connectivity_checking = "OFF",
		ram_block11a_13.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_13.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_13.operation_mode = "dual_port",
		ram_block11a_13.port_a_address_width = 4,
		ram_block11a_13.port_a_data_width = 1,
		ram_block11a_13.port_a_first_address = 0,
		ram_block11a_13.port_a_first_bit_number = 13,
		ram_block11a_13.port_a_last_address = 15,
		ram_block11a_13.port_a_logical_ram_depth = 16,
		ram_block11a_13.port_a_logical_ram_width = 24,
		ram_block11a_13.port_b_address_clear = "none",
		ram_block11a_13.port_b_address_clock = "clock1",
		ram_block11a_13.port_b_address_width = 4,
		ram_block11a_13.port_b_data_out_clear = "none",
		ram_block11a_13.port_b_data_out_clock = "clock1",
		ram_block11a_13.port_b_data_width = 1,
		ram_block11a_13.port_b_first_address = 0,
		ram_block11a_13.port_b_first_bit_number = 13,
		ram_block11a_13.port_b_last_address = 15,
		ram_block11a_13.port_b_logical_ram_depth = 16,
		ram_block11a_13.port_b_logical_ram_width = 24,
		ram_block11a_13.port_b_read_enable_clock = "clock1",
		ram_block11a_13.ram_block_type = "AUTO",
		ram_block11a_13.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_14
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[14]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_14portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_14.clk0_core_clock_enable = "none",
		ram_block11a_14.clk0_input_clock_enable = "none",
		ram_block11a_14.clk1_core_clock_enable = "none",
		ram_block11a_14.clk1_input_clock_enable = "none",
		ram_block11a_14.clk1_output_clock_enable = "ena1",
		ram_block11a_14.connectivity_checking = "OFF",
		ram_block11a_14.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_14.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_14.operation_mode = "dual_port",
		ram_block11a_14.port_a_address_width = 4,
		ram_block11a_14.port_a_data_width = 1,
		ram_block11a_14.port_a_first_address = 0,
		ram_block11a_14.port_a_first_bit_number = 14,
		ram_block11a_14.port_a_last_address = 15,
		ram_block11a_14.port_a_logical_ram_depth = 16,
		ram_block11a_14.port_a_logical_ram_width = 24,
		ram_block11a_14.port_b_address_clear = "none",
		ram_block11a_14.port_b_address_clock = "clock1",
		ram_block11a_14.port_b_address_width = 4,
		ram_block11a_14.port_b_data_out_clear = "none",
		ram_block11a_14.port_b_data_out_clock = "clock1",
		ram_block11a_14.port_b_data_width = 1,
		ram_block11a_14.port_b_first_address = 0,
		ram_block11a_14.port_b_first_bit_number = 14,
		ram_block11a_14.port_b_last_address = 15,
		ram_block11a_14.port_b_logical_ram_depth = 16,
		ram_block11a_14.port_b_logical_ram_width = 24,
		ram_block11a_14.port_b_read_enable_clock = "clock1",
		ram_block11a_14.ram_block_type = "AUTO",
		ram_block11a_14.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_15
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[15]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_15portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_15.clk0_core_clock_enable = "none",
		ram_block11a_15.clk0_input_clock_enable = "none",
		ram_block11a_15.clk1_core_clock_enable = "none",
		ram_block11a_15.clk1_input_clock_enable = "none",
		ram_block11a_15.clk1_output_clock_enable = "ena1",
		ram_block11a_15.connectivity_checking = "OFF",
		ram_block11a_15.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_15.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_15.operation_mode = "dual_port",
		ram_block11a_15.port_a_address_width = 4,
		ram_block11a_15.port_a_data_width = 1,
		ram_block11a_15.port_a_first_address = 0,
		ram_block11a_15.port_a_first_bit_number = 15,
		ram_block11a_15.port_a_last_address = 15,
		ram_block11a_15.port_a_logical_ram_depth = 16,
		ram_block11a_15.port_a_logical_ram_width = 24,
		ram_block11a_15.port_b_address_clear = "none",
		ram_block11a_15.port_b_address_clock = "clock1",
		ram_block11a_15.port_b_address_width = 4,
		ram_block11a_15.port_b_data_out_clear = "none",
		ram_block11a_15.port_b_data_out_clock = "clock1",
		ram_block11a_15.port_b_data_width = 1,
		ram_block11a_15.port_b_first_address = 0,
		ram_block11a_15.port_b_first_bit_number = 15,
		ram_block11a_15.port_b_last_address = 15,
		ram_block11a_15.port_b_logical_ram_depth = 16,
		ram_block11a_15.port_b_logical_ram_width = 24,
		ram_block11a_15.port_b_read_enable_clock = "clock1",
		ram_block11a_15.ram_block_type = "AUTO",
		ram_block11a_15.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_16
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[16]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_16portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_16.clk0_core_clock_enable = "none",
		ram_block11a_16.clk0_input_clock_enable = "none",
		ram_block11a_16.clk1_core_clock_enable = "none",
		ram_block11a_16.clk1_input_clock_enable = "none",
		ram_block11a_16.clk1_output_clock_enable = "ena1",
		ram_block11a_16.connectivity_checking = "OFF",
		ram_block11a_16.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_16.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_16.operation_mode = "dual_port",
		ram_block11a_16.port_a_address_width = 4,
		ram_block11a_16.port_a_data_width = 1,
		ram_block11a_16.port_a_first_address = 0,
		ram_block11a_16.port_a_first_bit_number = 16,
		ram_block11a_16.port_a_last_address = 15,
		ram_block11a_16.port_a_logical_ram_depth = 16,
		ram_block11a_16.port_a_logical_ram_width = 24,
		ram_block11a_16.port_b_address_clear = "none",
		ram_block11a_16.port_b_address_clock = "clock1",
		ram_block11a_16.port_b_address_width = 4,
		ram_block11a_16.port_b_data_out_clear = "none",
		ram_block11a_16.port_b_data_out_clock = "clock1",
		ram_block11a_16.port_b_data_width = 1,
		ram_block11a_16.port_b_first_address = 0,
		ram_block11a_16.port_b_first_bit_number = 16,
		ram_block11a_16.port_b_last_address = 15,
		ram_block11a_16.port_b_logical_ram_depth = 16,
		ram_block11a_16.port_b_logical_ram_width = 24,
		ram_block11a_16.port_b_read_enable_clock = "clock1",
		ram_block11a_16.ram_block_type = "AUTO",
		ram_block11a_16.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_17
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[17]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_17portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_17.clk0_core_clock_enable = "none",
		ram_block11a_17.clk0_input_clock_enable = "none",
		ram_block11a_17.clk1_core_clock_enable = "none",
		ram_block11a_17.clk1_input_clock_enable = "none",
		ram_block11a_17.clk1_output_clock_enable = "ena1",
		ram_block11a_17.connectivity_checking = "OFF",
		ram_block11a_17.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_17.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_17.operation_mode = "dual_port",
		ram_block11a_17.port_a_address_width = 4,
		ram_block11a_17.port_a_data_width = 1,
		ram_block11a_17.port_a_first_address = 0,
		ram_block11a_17.port_a_first_bit_number = 17,
		ram_block11a_17.port_a_last_address = 15,
		ram_block11a_17.port_a_logical_ram_depth = 16,
		ram_block11a_17.port_a_logical_ram_width = 24,
		ram_block11a_17.port_b_address_clear = "none",
		ram_block11a_17.port_b_address_clock = "clock1",
		ram_block11a_17.port_b_address_width = 4,
		ram_block11a_17.port_b_data_out_clear = "none",
		ram_block11a_17.port_b_data_out_clock = "clock1",
		ram_block11a_17.port_b_data_width = 1,
		ram_block11a_17.port_b_first_address = 0,
		ram_block11a_17.port_b_first_bit_number = 17,
		ram_block11a_17.port_b_last_address = 15,
		ram_block11a_17.port_b_logical_ram_depth = 16,
		ram_block11a_17.port_b_logical_ram_width = 24,
		ram_block11a_17.port_b_read_enable_clock = "clock1",
		ram_block11a_17.ram_block_type = "AUTO",
		ram_block11a_17.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_18
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[18]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_18portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_18.clk0_core_clock_enable = "none",
		ram_block11a_18.clk0_input_clock_enable = "none",
		ram_block11a_18.clk1_core_clock_enable = "none",
		ram_block11a_18.clk1_input_clock_enable = "none",
		ram_block11a_18.clk1_output_clock_enable = "ena1",
		ram_block11a_18.connectivity_checking = "OFF",
		ram_block11a_18.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_18.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_18.operation_mode = "dual_port",
		ram_block11a_18.port_a_address_width = 4,
		ram_block11a_18.port_a_data_width = 1,
		ram_block11a_18.port_a_first_address = 0,
		ram_block11a_18.port_a_first_bit_number = 18,
		ram_block11a_18.port_a_last_address = 15,
		ram_block11a_18.port_a_logical_ram_depth = 16,
		ram_block11a_18.port_a_logical_ram_width = 24,
		ram_block11a_18.port_b_address_clear = "none",
		ram_block11a_18.port_b_address_clock = "clock1",
		ram_block11a_18.port_b_address_width = 4,
		ram_block11a_18.port_b_data_out_clear = "none",
		ram_block11a_18.port_b_data_out_clock = "clock1",
		ram_block11a_18.port_b_data_width = 1,
		ram_block11a_18.port_b_first_address = 0,
		ram_block11a_18.port_b_first_bit_number = 18,
		ram_block11a_18.port_b_last_address = 15,
		ram_block11a_18.port_b_logical_ram_depth = 16,
		ram_block11a_18.port_b_logical_ram_width = 24,
		ram_block11a_18.port_b_read_enable_clock = "clock1",
		ram_block11a_18.ram_block_type = "AUTO",
		ram_block11a_18.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_19
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[19]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_19portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_19.clk0_core_clock_enable = "none",
		ram_block11a_19.clk0_input_clock_enable = "none",
		ram_block11a_19.clk1_core_clock_enable = "none",
		ram_block11a_19.clk1_input_clock_enable = "none",
		ram_block11a_19.clk1_output_clock_enable = "ena1",
		ram_block11a_19.connectivity_checking = "OFF",
		ram_block11a_19.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_19.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_19.operation_mode = "dual_port",
		ram_block11a_19.port_a_address_width = 4,
		ram_block11a_19.port_a_data_width = 1,
		ram_block11a_19.port_a_first_address = 0,
		ram_block11a_19.port_a_first_bit_number = 19,
		ram_block11a_19.port_a_last_address = 15,
		ram_block11a_19.port_a_logical_ram_depth = 16,
		ram_block11a_19.port_a_logical_ram_width = 24,
		ram_block11a_19.port_b_address_clear = "none",
		ram_block11a_19.port_b_address_clock = "clock1",
		ram_block11a_19.port_b_address_width = 4,
		ram_block11a_19.port_b_data_out_clear = "none",
		ram_block11a_19.port_b_data_out_clock = "clock1",
		ram_block11a_19.port_b_data_width = 1,
		ram_block11a_19.port_b_first_address = 0,
		ram_block11a_19.port_b_first_bit_number = 19,
		ram_block11a_19.port_b_last_address = 15,
		ram_block11a_19.port_b_logical_ram_depth = 16,
		ram_block11a_19.port_b_logical_ram_width = 24,
		ram_block11a_19.port_b_read_enable_clock = "clock1",
		ram_block11a_19.ram_block_type = "AUTO",
		ram_block11a_19.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_20
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[20]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_20portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_20.clk0_core_clock_enable = "none",
		ram_block11a_20.clk0_input_clock_enable = "none",
		ram_block11a_20.clk1_core_clock_enable = "none",
		ram_block11a_20.clk1_input_clock_enable = "none",
		ram_block11a_20.clk1_output_clock_enable = "ena1",
		ram_block11a_20.connectivity_checking = "OFF",
		ram_block11a_20.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_20.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_20.operation_mode = "dual_port",
		ram_block11a_20.port_a_address_width = 4,
		ram_block11a_20.port_a_data_width = 1,
		ram_block11a_20.port_a_first_address = 0,
		ram_block11a_20.port_a_first_bit_number = 20,
		ram_block11a_20.port_a_last_address = 15,
		ram_block11a_20.port_a_logical_ram_depth = 16,
		ram_block11a_20.port_a_logical_ram_width = 24,
		ram_block11a_20.port_b_address_clear = "none",
		ram_block11a_20.port_b_address_clock = "clock1",
		ram_block11a_20.port_b_address_width = 4,
		ram_block11a_20.port_b_data_out_clear = "none",
		ram_block11a_20.port_b_data_out_clock = "clock1",
		ram_block11a_20.port_b_data_width = 1,
		ram_block11a_20.port_b_first_address = 0,
		ram_block11a_20.port_b_first_bit_number = 20,
		ram_block11a_20.port_b_last_address = 15,
		ram_block11a_20.port_b_logical_ram_depth = 16,
		ram_block11a_20.port_b_logical_ram_width = 24,
		ram_block11a_20.port_b_read_enable_clock = "clock1",
		ram_block11a_20.ram_block_type = "AUTO",
		ram_block11a_20.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_21
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[21]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_21portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_21.clk0_core_clock_enable = "none",
		ram_block11a_21.clk0_input_clock_enable = "none",
		ram_block11a_21.clk1_core_clock_enable = "none",
		ram_block11a_21.clk1_input_clock_enable = "none",
		ram_block11a_21.clk1_output_clock_enable = "ena1",
		ram_block11a_21.connectivity_checking = "OFF",
		ram_block11a_21.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_21.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_21.operation_mode = "dual_port",
		ram_block11a_21.port_a_address_width = 4,
		ram_block11a_21.port_a_data_width = 1,
		ram_block11a_21.port_a_first_address = 0,
		ram_block11a_21.port_a_first_bit_number = 21,
		ram_block11a_21.port_a_last_address = 15,
		ram_block11a_21.port_a_logical_ram_depth = 16,
		ram_block11a_21.port_a_logical_ram_width = 24,
		ram_block11a_21.port_b_address_clear = "none",
		ram_block11a_21.port_b_address_clock = "clock1",
		ram_block11a_21.port_b_address_width = 4,
		ram_block11a_21.port_b_data_out_clear = "none",
		ram_block11a_21.port_b_data_out_clock = "clock1",
		ram_block11a_21.port_b_data_width = 1,
		ram_block11a_21.port_b_first_address = 0,
		ram_block11a_21.port_b_first_bit_number = 21,
		ram_block11a_21.port_b_last_address = 15,
		ram_block11a_21.port_b_logical_ram_depth = 16,
		ram_block11a_21.port_b_logical_ram_width = 24,
		ram_block11a_21.port_b_read_enable_clock = "clock1",
		ram_block11a_21.ram_block_type = "AUTO",
		ram_block11a_21.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_22
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[22]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_22portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_22.clk0_core_clock_enable = "none",
		ram_block11a_22.clk0_input_clock_enable = "none",
		ram_block11a_22.clk1_core_clock_enable = "none",
		ram_block11a_22.clk1_input_clock_enable = "none",
		ram_block11a_22.clk1_output_clock_enable = "ena1",
		ram_block11a_22.connectivity_checking = "OFF",
		ram_block11a_22.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_22.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_22.operation_mode = "dual_port",
		ram_block11a_22.port_a_address_width = 4,
		ram_block11a_22.port_a_data_width = 1,
		ram_block11a_22.port_a_first_address = 0,
		ram_block11a_22.port_a_first_bit_number = 22,
		ram_block11a_22.port_a_last_address = 15,
		ram_block11a_22.port_a_logical_ram_depth = 16,
		ram_block11a_22.port_a_logical_ram_width = 24,
		ram_block11a_22.port_b_address_clear = "none",
		ram_block11a_22.port_b_address_clock = "clock1",
		ram_block11a_22.port_b_address_width = 4,
		ram_block11a_22.port_b_data_out_clear = "none",
		ram_block11a_22.port_b_data_out_clock = "clock1",
		ram_block11a_22.port_b_data_width = 1,
		ram_block11a_22.port_b_first_address = 0,
		ram_block11a_22.port_b_first_bit_number = 22,
		ram_block11a_22.port_b_last_address = 15,
		ram_block11a_22.port_b_logical_ram_depth = 16,
		ram_block11a_22.port_b_logical_ram_width = 24,
		ram_block11a_22.port_b_read_enable_clock = "clock1",
		ram_block11a_22.ram_block_type = "AUTO",
		ram_block11a_22.lpm_type = "cycloneive_ram_block";
	cycloneive_ram_block   ram_block11a_23
	( 
	.clk0(clock0),
	.clk1(clock1),
	.ena1(clocken1),
	.portaaddr({address_a_wire[3:0]}),
	.portadatain({data_a[23]}),
	.portadataout(),
	.portawe(wren_a),
	.portbaddr({address_b_wire[3:0]}),
	.portbaddrstall(addressstall_b),
	.portbdataout(wire_ram_block11a_23portbdataout[0:0]),
	.portbre(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.clr0(1'b0),
	.clr1(1'b0),
	.ena0(1'b1),
	.ena2(1'b1),
	.ena3(1'b1),
	.portaaddrstall(1'b0),
	.portabyteenamasks({1{1'b1}}),
	.portare(1'b1),
	.portbbyteenamasks({1{1'b1}}),
	.portbdatain({1{1'b0}}),
	.portbwe(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		ram_block11a_23.clk0_core_clock_enable = "none",
		ram_block11a_23.clk0_input_clock_enable = "none",
		ram_block11a_23.clk1_core_clock_enable = "none",
		ram_block11a_23.clk1_input_clock_enable = "none",
		ram_block11a_23.clk1_output_clock_enable = "ena1",
		ram_block11a_23.connectivity_checking = "OFF",
		ram_block11a_23.logical_ram_name = "ALTSYNCRAM",
		ram_block11a_23.mixed_port_feed_through_mode = "dont_care",
		ram_block11a_23.operation_mode = "dual_port",
		ram_block11a_23.port_a_address_width = 4,
		ram_block11a_23.port_a_data_width = 1,
		ram_block11a_23.port_a_first_address = 0,
		ram_block11a_23.port_a_first_bit_number = 23,
		ram_block11a_23.port_a_last_address = 15,
		ram_block11a_23.port_a_logical_ram_depth = 16,
		ram_block11a_23.port_a_logical_ram_width = 24,
		ram_block11a_23.port_b_address_clear = "none",
		ram_block11a_23.port_b_address_clock = "clock1",
		ram_block11a_23.port_b_address_width = 4,
		ram_block11a_23.port_b_data_out_clear = "none",
		ram_block11a_23.port_b_data_out_clock = "clock1",
		ram_block11a_23.port_b_data_width = 1,
		ram_block11a_23.port_b_first_address = 0,
		ram_block11a_23.port_b_first_bit_number = 23,
		ram_block11a_23.port_b_last_address = 15,
		ram_block11a_23.port_b_logical_ram_depth = 16,
		ram_block11a_23.port_b_logical_ram_width = 24,
		ram_block11a_23.port_b_read_enable_clock = "clock1",
		ram_block11a_23.ram_block_type = "AUTO",
		ram_block11a_23.lpm_type = "cycloneive_ram_block";
	assign
		address_a_wire = address_a,
		address_b_wire = address_b,
		q_b = {wire_ram_block11a_23portbdataout[0], wire_ram_block11a_22portbdataout[0], wire_ram_block11a_21portbdataout[0], wire_ram_block11a_20portbdataout[0], wire_ram_block11a_19portbdataout[0], wire_ram_block11a_18portbdataout[0], wire_ram_block11a_17portbdataout[0], wire_ram_block11a_16portbdataout[0], wire_ram_block11a_15portbdataout[0], wire_ram_block11a_14portbdataout[0], wire_ram_block11a_13portbdataout[0], wire_ram_block11a_12portbdataout[0], wire_ram_block11a_11portbdataout[0], wire_ram_block11a_10portbdataout[0], wire_ram_block11a_9portbdataout[0], wire_ram_block11a_8portbdataout[0], wire_ram_block11a_7portbdataout[0], wire_ram_block11a_6portbdataout[0], wire_ram_block11a_5portbdataout[0], wire_ram_block11a_4portbdataout[0], wire_ram_block11a_3portbdataout[0], wire_ram_block11a_2portbdataout[0], wire_ram_block11a_1portbdataout[0], wire_ram_block11a_0portbdataout[0]};
endmodule //fifo_ip_altsyncram


//dffpipe DELAY=2 WIDTH=5 clock d q ALTERA_INTERNAL_OPTIONS=X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS
//VERSION_BEGIN 15.0 cbx_a_gray2bin 2015:04:22:18:04:07:SJ cbx_a_graycounter 2015:04:22:18:04:07:SJ cbx_altdpram 2015:04:22:18:04:07:SJ cbx_altsyncram 2015:04:22:18:04:07:SJ cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_dcfifo 2015:04:22:18:04:07:SJ cbx_fifo_common 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_counter 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_lpm_mux 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_scfifo 2015:04:22:18:04:08:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ cbx_stratixiii 2015:04:22:18:04:08:SJ cbx_stratixv 2015:04:22:18:04:08:SJ cbx_util_mgl 2015:04:22:18:04:08:SJ  VERSION_END


//dffpipe DELAY=2 WIDTH=5 clock d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 15.0 cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratixii 2015:04:22:18:04:08:SJ cbx_util_mgl 2015:04:22:18:04:08:SJ  VERSION_END

//synthesis_resources = reg 10 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  fifo_ip_dffpipe
	( 
	clock,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [4:0]  d;
	output   [4:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[4:0]	dffe13a;
	reg	[4:0]	dffe14a;
	wire clrn;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe13a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe13a <= {5{1'b1}};
		else if (clrn == 1'b0) dffe13a <= 5'b0;
		else if  (ena == 1'b1)   dffe13a <= (d & {5{(~ sclr)}});
	// synopsys translate_off
	initial
		dffe14a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe14a <= {5{1'b1}};
		else if (clrn == 1'b0) dffe14a <= 5'b0;
		else if  (ena == 1'b1)   dffe14a <= (dffe13a & {5{(~ sclr)}});
	assign
		clrn = 1'b1,
		ena = 1'b1,
		prn = 1'b1,
		q = dffe14a,
		sclr = 1'b0;
endmodule //fifo_ip_dffpipe

//synthesis_resources = reg 10 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS"} *)
module  fifo_ip_alt_synch_pipe
	( 
	clock,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [4:0]  d;
	output   [4:0]  q;

	wire  [4:0]   wire_dffpipe12_q;

	fifo_ip_dffpipe   dffpipe12
	( 
	.clock(clock),
	.d(d),
	.q(wire_dffpipe12_q));
	assign
		q = wire_dffpipe12_q;
endmodule //fifo_ip_alt_synch_pipe


//dffpipe DELAY=2 WIDTH=5 clock d q ALTERA_INTERNAL_OPTIONS=X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS
//VERSION_BEGIN 15.0 cbx_a_gray2bin 2015:04:22:18:04:07:SJ cbx_a_graycounter 2015:04:22:18:04:07:SJ cbx_altdpram 2015:04:22:18:04:07:SJ cbx_altsyncram 2015:04:22:18:04:07:SJ cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_dcfifo 2015:04:22:18:04:07:SJ cbx_fifo_common 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_counter 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_lpm_mux 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_scfifo 2015:04:22:18:04:08:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ cbx_stratixiii 2015:04:22:18:04:08:SJ cbx_stratixv 2015:04:22:18:04:08:SJ cbx_util_mgl 2015:04:22:18:04:08:SJ  VERSION_END


//dffpipe DELAY=2 WIDTH=5 clock d q ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
//VERSION_BEGIN 15.0 cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratixii 2015:04:22:18:04:08:SJ cbx_util_mgl 2015:04:22:18:04:08:SJ  VERSION_END

//synthesis_resources = reg 10 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF"} *)
module  fifo_ip_dffpipe1
	( 
	clock,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [4:0]  d;
	output   [4:0]  q;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	reg	[4:0]	dffe16a;
	reg	[4:0]	dffe17a;
	wire clrn;
	wire ena;
	wire prn;
	wire sclr;

	// synopsys translate_off
	initial
		dffe16a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe16a <= {5{1'b1}};
		else if (clrn == 1'b0) dffe16a <= 5'b0;
		else if  (ena == 1'b1)   dffe16a <= (d & {5{(~ sclr)}});
	// synopsys translate_off
	initial
		dffe17a = 0;
	// synopsys translate_on
	always @ ( posedge clock or  negedge prn or  negedge clrn)
		if (prn == 1'b0) dffe17a <= {5{1'b1}};
		else if (clrn == 1'b0) dffe17a <= 5'b0;
		else if  (ena == 1'b1)   dffe17a <= (dffe16a & {5{(~ sclr)}});
	assign
		clrn = 1'b1,
		ena = 1'b1,
		prn = 1'b1,
		q = dffe17a,
		sclr = 1'b0;
endmodule //fifo_ip_dffpipe1

//synthesis_resources = reg 10 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"X_ON_VIOLATION_OPTION=OFF;SYNCHRONIZER_IDENTIFICATION=FORCED_IF_ASYNCHRONOUS"} *)
module  fifo_ip_alt_synch_pipe1
	( 
	clock,
	d,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [4:0]  d;
	output   [4:0]  q;

	wire  [4:0]   wire_dffpipe15_q;

	fifo_ip_dffpipe1   dffpipe15
	( 
	.clock(clock),
	.d(d),
	.q(wire_dffpipe15_q));
	assign
		q = wire_dffpipe15_q;
endmodule //fifo_ip_alt_synch_pipe1


//lpm_compare DEVICE_FAMILY="Cyclone IV E" LPM_WIDTH=5 aeb dataa datab
//VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  fifo_ip_cmpr
	( 
	aeb,
	dataa,
	datab) /* synthesis synthesis_clearbox=1 */;
	output   aeb;
	input   [4:0]  dataa;
	input   [4:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [4:0]  dataa;
	tri0   [4:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  aeb_result_wire;
	wire  [0:0]  aneb_result_wire;
	wire  [12:0]  data_wire;
	wire  eq_wire;

	assign
		aeb = eq_wire,
		aeb_result_wire = (~ aneb_result_wire),
		aneb_result_wire = ((data_wire[0] | data_wire[1]) | data_wire[2]),
		data_wire = {datab[4], dataa[4], datab[3], dataa[3], datab[2], dataa[2], datab[1], dataa[1], datab[0], dataa[0], (data_wire[11] ^ data_wire[12]), ((data_wire[7] ^ data_wire[8]) | (data_wire[9] ^ data_wire[10])), ((data_wire[3] ^ data_wire[4]) | (data_wire[5] ^ data_wire[6]))},
		eq_wire = aeb_result_wire;
endmodule //fifo_ip_cmpr

//synthesis_resources = M9K 1 reg 51 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 2;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=d103;-name CUT ON -from rdptr_g -to ws_dgrp|fifo_ip_dffpipe1:dffpipe15|dffe16a;-name SDC_STATEMENT \"set_false_path -from *rdptr_g* -to *ws_dgrp|fifo_ip_dffpipe1:dffpipe15|dffe16a* \";-name CUT ON -from delayed_wrptr_g -to rs_dgwp|fifo_ip_dffpipe:dffpipe12|dffe13a;-name SDC_STATEMENT \"set_false_path -from *delayed_wrptr_g* -to *rs_dgwp|fifo_ip_dffpipe:dffpipe12|dffe13a* \""} *)
module  fifo_ip_dcfifo
	( 
	data,
	q,
	rdclk,
	rdempty,
	rdreq,
	wrclk,
	wrfull,
	wrreq) /* synthesis synthesis_clearbox=1 */;
	input   [23:0]  data;
	output   [23:0]  q;
	input   rdclk;
	output   rdempty;
	input   rdreq;
	input   wrclk;
	output   wrfull;
	input   wrreq;

	wire  [4:0]   wire_rdptr_g1p_q;
	wire  [4:0]   wire_wrptr_g1p_q;
	wire  [23:0]   wire_fifo_ram_q_b;
	reg	[4:0]	delayed_wrptr_g;
	reg	[4:0]	rdptr_g;
	(* ALTERA_ATTRIBUTE = {"suppress_da_rule_internal=S102;POWER_UP_LEVEL=LOW"} *)
	reg	[4:0]	wrptr_g;
	wire  [4:0]   wire_rs_dgwp_q;
	wire  [4:0]   wire_ws_dgrp_q;
	wire  wire_rdempty_eq_comp_aeb;
	wire  wire_wrfull_eq_comp_aeb;
	wire  int_rdempty;
	wire  int_wrfull;
	wire  [3:0]  ram_address_a;
	wire  [3:0]  ram_address_b;
	wire  valid_rdreq;
	wire  valid_wrreq;
	wire  [4:0]  wrptr_gs;

	fifo_ip_a_graycounter   rdptr_g1p
	( 
	.clock(rdclk),
	.cnt_en(valid_rdreq),
	.q(wire_rdptr_g1p_q));
	fifo_ip_a_graycounter1   wrptr_g1p
	( 
	.clock(wrclk),
	.cnt_en(valid_wrreq),
	.q(wire_wrptr_g1p_q));
	fifo_ip_altsyncram   fifo_ram
	( 
	.address_a(ram_address_a),
	.address_b(ram_address_b),
	.addressstall_b((~ valid_rdreq)),
	.clock0(wrclk),
	.clock1(rdclk),
	.clocken1(valid_rdreq),
	.data_a(data),
	.q_b(wire_fifo_ram_q_b),
	.wren_a(valid_wrreq));
	// synopsys translate_off
	initial
		delayed_wrptr_g = 0;
	// synopsys translate_on
	always @ ( posedge wrclk)
		  delayed_wrptr_g <= wrptr_g;
	// synopsys translate_off
	initial
		rdptr_g = 0;
	// synopsys translate_on
	always @ ( posedge rdclk)
		if (valid_rdreq == 1'b1)   rdptr_g <= wire_rdptr_g1p_q;
	// synopsys translate_off
	initial
		wrptr_g = 0;
	// synopsys translate_on
	always @ ( posedge wrclk)
		if (valid_wrreq == 1'b1)   wrptr_g <= wire_wrptr_g1p_q;
	fifo_ip_alt_synch_pipe   rs_dgwp
	( 
	.clock(rdclk),
	.d(delayed_wrptr_g),
	.q(wire_rs_dgwp_q));
	fifo_ip_alt_synch_pipe1   ws_dgrp
	( 
	.clock(wrclk),
	.d(rdptr_g),
	.q(wire_ws_dgrp_q));
	fifo_ip_cmpr   rdempty_eq_comp
	( 
	.aeb(wire_rdempty_eq_comp_aeb),
	.dataa(wire_rs_dgwp_q),
	.datab(rdptr_g));
	fifo_ip_cmpr   wrfull_eq_comp
	( 
	.aeb(wire_wrfull_eq_comp_aeb),
	.dataa(wire_ws_dgrp_q),
	.datab(wrptr_gs));
	assign
		int_rdempty = wire_rdempty_eq_comp_aeb,
		int_wrfull = wire_wrfull_eq_comp_aeb,
		q = wire_fifo_ram_q_b,
		ram_address_a = {(wrptr_g[4] ^ wrptr_g[3]), wrptr_g[2:0]},
		ram_address_b = {(wire_rdptr_g1p_q[4] ^ wire_rdptr_g1p_q[3]), wire_rdptr_g1p_q[2:0]},
		rdempty = int_rdempty,
		valid_rdreq = (rdreq & (~ int_rdempty)),
		valid_wrreq = (wrreq & (~ int_wrfull)),
		wrfull = int_wrfull,
		wrptr_gs = {(~ wrptr_g[4]), (~ wrptr_g[3]), wrptr_g[2:0]};
endmodule //fifo_ip_dcfifo
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module fifo_ip (
	data,
	rdclk,
	rdreq,
	wrclk,
	wrreq,
	q,
	rdempty,
	wrfull)/* synthesis synthesis_clearbox = 1 */;

	input	[23:0]  data;
	input	  rdclk;
	input	  rdreq;
	input	  wrclk;
	input	  wrreq;
	output	[23:0]  q;
	output	  rdempty;
	output	  wrfull;

	wire [23:0] sub_wire0;
	wire  sub_wire1;
	wire  sub_wire2;
	wire [23:0] q = sub_wire0[23:0];
	wire  rdempty = sub_wire1;
	wire  wrfull = sub_wire2;

	fifo_ip_dcfifo	fifo_ip_dcfifo_component (
				.data (data),
				.rdclk (rdclk),
				.rdreq (rdreq),
				.wrclk (wrclk),
				.wrreq (wrreq),
				.q (sub_wire0),
				.rdempty (sub_wire1),
				.wrfull (sub_wire2));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: AlmostEmpty NUMERIC "0"
// Retrieval info: PRIVATE: AlmostEmptyThr NUMERIC "-1"
// Retrieval info: PRIVATE: AlmostFull NUMERIC "0"
// Retrieval info: PRIVATE: AlmostFullThr NUMERIC "-1"
// Retrieval info: PRIVATE: CLOCKS_ARE_SYNCHRONIZED NUMERIC "0"
// Retrieval info: PRIVATE: Clock NUMERIC "4"
// Retrieval info: PRIVATE: Depth NUMERIC "16"
// Retrieval info: PRIVATE: Empty NUMERIC "1"
// Retrieval info: PRIVATE: Full NUMERIC "1"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone IV E"
// Retrieval info: PRIVATE: LE_BasedFIFO NUMERIC "0"
// Retrieval info: PRIVATE: LegacyRREQ NUMERIC "1"
// Retrieval info: PRIVATE: MAX_DEPTH_BY_9 NUMERIC "0"
// Retrieval info: PRIVATE: OVERFLOW_CHECKING NUMERIC "0"
// Retrieval info: PRIVATE: Optimize NUMERIC "0"
// Retrieval info: PRIVATE: RAM_BLOCK_TYPE NUMERIC "0"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: UNDERFLOW_CHECKING NUMERIC "0"
// Retrieval info: PRIVATE: UsedW NUMERIC "1"
// Retrieval info: PRIVATE: Width NUMERIC "24"
// Retrieval info: PRIVATE: dc_aclr NUMERIC "0"
// Retrieval info: PRIVATE: diff_widths NUMERIC "0"
// Retrieval info: PRIVATE: msb_usedw NUMERIC "0"
// Retrieval info: PRIVATE: output_width NUMERIC "24"
// Retrieval info: PRIVATE: rsEmpty NUMERIC "1"
// Retrieval info: PRIVATE: rsFull NUMERIC "0"
// Retrieval info: PRIVATE: rsUsedW NUMERIC "0"
// Retrieval info: PRIVATE: sc_aclr NUMERIC "0"
// Retrieval info: PRIVATE: sc_sclr NUMERIC "0"
// Retrieval info: PRIVATE: wsEmpty NUMERIC "0"
// Retrieval info: PRIVATE: wsFull NUMERIC "1"
// Retrieval info: PRIVATE: wsUsedW NUMERIC "0"
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone IV E"
// Retrieval info: CONSTANT: LPM_NUMWORDS NUMERIC "16"
// Retrieval info: CONSTANT: LPM_SHOWAHEAD STRING "OFF"
// Retrieval info: CONSTANT: LPM_TYPE STRING "dcfifo"
// Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "24"
// Retrieval info: CONSTANT: LPM_WIDTHU NUMERIC "4"
// Retrieval info: CONSTANT: OVERFLOW_CHECKING STRING "ON"
// Retrieval info: CONSTANT: RDSYNC_DELAYPIPE NUMERIC "4"
// Retrieval info: CONSTANT: UNDERFLOW_CHECKING STRING "ON"
// Retrieval info: CONSTANT: USE_EAB STRING "ON"
// Retrieval info: CONSTANT: WRSYNC_DELAYPIPE NUMERIC "4"
// Retrieval info: USED_PORT: data 0 0 24 0 INPUT NODEFVAL "data[23..0]"
// Retrieval info: USED_PORT: q 0 0 24 0 OUTPUT NODEFVAL "q[23..0]"
// Retrieval info: USED_PORT: rdclk 0 0 0 0 INPUT NODEFVAL "rdclk"
// Retrieval info: USED_PORT: rdempty 0 0 0 0 OUTPUT NODEFVAL "rdempty"
// Retrieval info: USED_PORT: rdreq 0 0 0 0 INPUT NODEFVAL "rdreq"
// Retrieval info: USED_PORT: wrclk 0 0 0 0 INPUT NODEFVAL "wrclk"
// Retrieval info: USED_PORT: wrfull 0 0 0 0 OUTPUT NODEFVAL "wrfull"
// Retrieval info: USED_PORT: wrreq 0 0 0 0 INPUT NODEFVAL "wrreq"
// Retrieval info: CONNECT: @data 0 0 24 0 data 0 0 24 0
// Retrieval info: CONNECT: @rdclk 0 0 0 0 rdclk 0 0 0 0
// Retrieval info: CONNECT: @rdreq 0 0 0 0 rdreq 0 0 0 0
// Retrieval info: CONNECT: @wrclk 0 0 0 0 wrclk 0 0 0 0
// Retrieval info: CONNECT: @wrreq 0 0 0 0 wrreq 0 0 0 0
// Retrieval info: CONNECT: q 0 0 24 0 @q 0 0 24 0
// Retrieval info: CONNECT: rdempty 0 0 0 0 @rdempty 0 0 0 0
// Retrieval info: CONNECT: wrfull 0 0 0 0 @wrfull 0 0 0 0
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo_ip.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo_ip.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo_ip.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo_ip.bsf FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo_ip_inst.v FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo_ip_bb.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL fifo_ip_syn.v TRUE
// Retrieval info: LIB_FILE: altera_mf
